<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="org.pitest.mutationtest.MutationCoverageReportSystemTest" time="127.514" tests="30" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="sun.boot.library.path" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64"/>
    <property name="java.vm.version" value="25.141-b15"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="maven.multiModuleProjectDirectory" value="/mnt/c/pitest2/pitest-pitest-parent-1.3.2"/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="path.separator" value=":"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="user.country" value="US"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.os.patch.level" value="unknown"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.dir" value="/mnt/c/pitest2/pitest-pitest-parent-1.3.2"/>
    <property name="java.runtime.version" value="1.8.0_141-8u141-b15-3~14.04-b15"/>
    <property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/>
    <property name="java.endorsed.dirs" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="os.name" value="Linux"/>
    <property name="classworlds.conf" value="/mnt/c/Users/Marc Tifrea/Downloads/apache-maven-3.5.2-bin/apache-maven-3.5.2/bin/m2.conf"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib"/>
    <property name="maven.conf" value="/mnt/c/Users/Marc Tifrea/Downloads/apache-maven-3.5.2-bin/apache-maven-3.5.2/conf"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.class.version" value="52.0"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="os.version" value="4.4.0-43-Microsoft"/>
    <property name="library.jansi.path" value="/mnt/c/Users/Marc Tifrea/Downloads/apache-maven-3.5.2-bin/apache-maven-3.5.2/lib/jansi-native"/>
    <property name="user.home" value="/home/marc"/>
    <property name="user.timezone" value="GMT"/>
    <property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/>
    <property name="java.specification.version" value="1.8"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="user.name" value="marc"/>
    <property name="java.class.path" value="/mnt/c/Users/Marc Tifrea/Downloads/apache-maven-3.5.2-bin/apache-maven-3.5.2/boot/plexus-classworlds-2.5.2.jar"/>
    <property name="java.vm.specification.version" value="1.8"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.home" value="/usr/lib/jvm/java-8-openjdk-amd64/jre"/>
    <property name="sun.java.command" value="org.codehaus.plexus.classworlds.launcher.Launcher clean install"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="user.language" value="en"/>
    <property name="awt.toolkit" value="sun.awt.X11.XToolkit"/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.version" value="1.8.0_141"/>
    <property name="java.ext.dirs" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext"/>
    <property name="securerandom.source" value="file:/dev/./urandom"/>
    <property name="sun.boot.class.path" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="maven.home" value="/mnt/c/Users/Marc Tifrea/Downloads/apache-maven-3.5.2-bin/apache-maven-3.5.2"/>
    <property name="file.separator" value="/"/>
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="sun.cpu.isalist" value=""/>
  </properties>
  <testcase name="shouldLoadResoucesOffClassPathFromFolderWithSpaces" classname="org.pitest.mutationtest.MutationCoverageReportSystemTest" time="6.191"/>
  <testcase name="shouldFailRunWithHelpfulMessageIfTestsNotGreen" classname="org.pitest.mutationtest.MutationCoverageReportSystemTest" time="2.752"/>
  <testcase name="shouldMarkChildJVMCrashesAsRunErrors" classname="org.pitest.mutationtest.MutationCoverageReportSystemTest" time="5.015"/>
  <testcase name="shouldKillMutationsWhenMutationsPreventsConstructionOfTestClass" classname="org.pitest.mutationtest.MutationCoverageReportSystemTest" time="5.037"/>
  <testcase name="shouldNotMutateMethodsMatchingExclusionPredicate" classname="org.pitest.mutationtest.MutationCoverageReportSystemTest" time="2.713"/>
  <testcase name="shouldCombineAndKillInlinedMutationsInFinallyBlocks" classname="org.pitest.mutationtest.MutationCoverageReportSystemTest" time="5.125"/>
  <testcase name="shouldWorkWithEasyMock" classname="org.pitest.mutationtest.MutationCoverageReportSystemTest" time="5.923"/>
  <testcase name="shouldExcludeFilteredTests" classname="org.pitest.mutationtest.MutationCoverageReportSystemTest" time="2.653"/>
  <testcase name="shouldKillMutationsWhenKillingTestClassContainsAnIgnoreOnAnotherMethod" classname="org.pitest.mutationtest.MutationCoverageReportSystemTest" time="5.032"/>
  <testcase name="shouldNotMutateClassesAnnotatedWithGenerated" classname="org.pitest.mutationtest.MutationCoverageReportSystemTest" time="2.403"/>
  <testcase name="shouldExitAfterFirstFailureWhenTestClassAnnotatedWithBeforeClass" classname="org.pitest.mutationtest.MutationCoverageReportSystemTest" time="5.148"/>
  <testcase name="shouldTerminateWhenThreadpoolCreated" classname="org.pitest.mutationtest.MutationCoverageReportSystemTest" time="5.035"/>
  <testcase name="shouldReportSurvivingMutations" classname="org.pitest.mutationtest.MutationCoverageReportSystemTest" time="4.993"/>
  <testcase name="willMutateStaticMethodsCalledFromInitializerAndElsewhere" classname="org.pitest.mutationtest.MutationCoverageReportSystemTest" time="2.549"/>
  <testcase name="shouldPickRelevantTestsFromSuppliedTestSuites" classname="org.pitest.mutationtest.MutationCoverageReportSystemTest" time="5.109"/>
  <testcase name="willAllowExcludedClassesToBeReIncludedViaSuite" classname="org.pitest.mutationtest.MutationCoverageReportSystemTest" time="4.884"/>
  <testcase name="shouldReportCombinedCoveredButNotTestedMutationsInFinallyBlocksAsSurvived" classname="org.pitest.mutationtest.MutationCoverageReportSystemTest" time="4.962"/>
  <testcase name="willMutatePriveMethodsCalledInChainFromInitializer" classname="org.pitest.mutationtest.MutationCoverageReportSystemTest" time="2.57"/>
  <testcase name="shouldPickRelevantTestsAndKillMutationsBasedOnCoverageDataWhenLimitedByClassReach" classname="org.pitest.mutationtest.MutationCoverageReportSystemTest" time="5.503"/>
  <testcase name="shouldUseTestsDefinedInASuppliedJUnitThreeSuite" classname="org.pitest.mutationtest.MutationCoverageReportSystemTest" time="5.144"/>
  <testcase name="shouldMutateClassesSuppliedToAlternateClassPath" classname="org.pitest.mutationtest.MutationCoverageReportSystemTest" time="4.933"/>
  <testcase name="shouldReportUnCoveredMutations" classname="org.pitest.mutationtest.MutationCoverageReportSystemTest" time="5.014"/>
  <testcase name="shouldMutateNonPrivateStaticMethodsCalledFromInitializerOnly" classname="org.pitest.mutationtest.MutationCoverageReportSystemTest" time="2.39"/>
  <testcase name="shouldNotMutateStaticMethodsOnlyCalledFromInitializer" classname="org.pitest.mutationtest.MutationCoverageReportSystemTest" time="2.663"/>
  <testcase name="shouldLimitNumberOfMutationsPerClass" classname="org.pitest.mutationtest.MutationCoverageReportSystemTest" time="2.63"/>
  <testcase name="shouldReportHelpfulErrorIfNoMutationsFounds" classname="org.pitest.mutationtest.MutationCoverageReportSystemTest" time="2.309"/>
  <testcase name="shouldPickRelevantTestsAndKillMutationsBasedOnCoverageData" classname="org.pitest.mutationtest.MutationCoverageReportSystemTest" time="5.168"/>
  <testcase name="shouldExcludeFilteredClasses" classname="org.pitest.mutationtest.MutationCoverageReportSystemTest" time="2.265"/>
  <testcase name="shouldWorkWithMockitoJUnitRunner" classname="org.pitest.mutationtest.MutationCoverageReportSystemTest" time="5.955"/>
  <testcase name="shouldSupportTestNG" classname="org.pitest.mutationtest.MutationCoverageReportSystemTest" time="5.446"/>
</testsuite>